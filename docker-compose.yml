version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: send-smart-backend
    ports:
      - "8080:8080"
      - "5005:5005"  # For remote debugging
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sendsmart
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
      - POSTAL_API_URL=http://postal:5000
      - POSTAL_API_KEY=${POSTAL_API_KEY}
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - postal
    networks:
      - send-smart-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: send-smart-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080/api
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - send-smart-network

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: send-smart-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sendsmart
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - send-smart-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: send-smart-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - send-smart-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: send-smart-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - send-smart-network

  # Postal Email Service
  postal:
    image: postalserver/postal:latest
    container_name: send-smart-postal
    ports:
      - "5000:5000"  # API
      - "8082:8080"  # Web UI
    environment:
      - POSTAL_RABBITMQ_HOST=rabbitmq
      - POSTAL_RABBITMQ_USERNAME=rabbitmq
      - POSTAL_RABBITMQ_PASSWORD=rabbitmq
      - POSTAL_DATABASE_HOST=postgres
      - POSTAL_DATABASE_USERNAME=postgres
      - POSTAL_DATABASE_PASSWORD=postgres
      - POSTAL_DATABASE_NAME=postal
    volumes:
      - postal-data:/var/lib/postal
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - send-smart-network

  # PgAdmin (optional database management tool)
  pgadmin:
    image: dpage/pgadmin4
    container_name: send-smart-pgadmin
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@sendsmart.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - send-smart-network

volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:
  postal-data:
  pgadmin-data:

networks:
  send-smart-network:
    driver: bridge